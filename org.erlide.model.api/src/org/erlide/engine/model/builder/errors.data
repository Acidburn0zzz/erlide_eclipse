[
 {scan, [
        {string, "unterminated ~ starting with ~"},
        {illegal, "illegal ~"},
        {char, "unterminated character"},
        {base, "illegal base '~'"}
       ]
 },
 {parser, [
          {syntax_error, "syntax error before: ~"}
         ]
 },
 {compile, [
           {no_native_support, "this system is not configured for native-code compilation."},
           {no_crypto, "this system is not configured with crypto support."},
           {bad_crypto_key, "invalid crypto key."},
           {no_crypto_key, "no crypto key supplied."},
           {native, "native-code compilation failed with reason: ~."},
           {native_crash, "native-code compilation crashed with reason: ~.\n~\n"},
           {open, "open error '~'"},
           {write_error, "error writing file"},
           {rename, "failed to rename ~ to ~: ~"},
           {delete, "failed to delete file ~: ~"},
           {delete_temp, "failed to delete temporary file ~: ~"},
           {parse_transform, "error in parse transform '~': ~"},
           {undef_parse_transform, "undefined parse transform '~'"},
           {core_transform, "error in core transform '~': ~"},
           {crash, "internal error in ~\ncrash reason: ~"},
           {bad_return, "internal error in ~\nbad return value: ~"},
           {module_name, "Module name '~' does not match file name '~'"}
          ]
 },
 {epp, [
       {cannot_parse, "cannot parse file, giving up"},
       {bad, "badly formed '~'"},
       {missing_parenthesis, "badly formed define: missing closing right parenthesis"},
       {premature_end, "premature end"},
       {call, "illegal macro call '~'"},
       {undefined, "undefined macro '~'"},
       {undefined, "undefined macro '~/~'"},
       {depth, "~ too deep"},
       {mismatch, "argument mismatch for macro '~'"},
       {arg_error, "badly formed argument for macro '~'"},
       {redefine, "redefining macro '~'"},
       {redefine_predef, "redefining predefined macro '~'"},
       {circular, "circular macro '~'"},
       {circular, "circular macro '~/~'"},
       {include, "can't find include ~ \"~\""},
       {illegal, "~ '-~'"},
       {'NYI', "not yet implemented '~'"}
      ]
 },
 {sys_core_fold, [
                 {eval_failure, "this expression will fail with a '~' exception"},
                 {embedded_binary_size, "binary construction will fail with a 'badarg' exception (field size for binary/bitstring greater than actual size)"},
                 {embedded_unit, "binary construction will fail with a 'badarg' exception (size ~ cannot be evenly divided by unit ~)"},
                 {bad_unicode, "binary construction will fail with a 'badarg' exception (invalid Unicode code point in a utf8/utf16/utf32 segment)"},
                 {nomatch_shadow, "this clause cannot match because a previous clause at line ~ always matches"},
                 {nomatch_shadow, "this clause cannot match because a previous clause always matches"},
                 {nomatch_guard, "the guard for this clause evaluates to 'false'"},
                 {no_clause_match, "no clause will ever match"},
                 {nomatch_clause_type, "this clause cannot match because of different types/sizes"},
                 {result_ignored, "the result of the expression is ignored (suppress the warning by assigning the expression to the _ variable)"},
                 {useless_building, "a term is constructed, but never used"},
                 {no_effect, "use of operator ~ has no effect"},
                 {no_effect, "the call to ~:~/~ has no effect"},
                 {no_effect, "the call to ~/~ has no effect"}
                ]
 },
 { erl_lint, [

             {undefined_module, "no module definition"},
             {redefine_module, "redefining module"},
             {pmod_unsupported, "parameterized modules are no longer supported"},

             {invalid_call, "invalid function call"},
             {invalid_record, "invalid record expression"},

             {attribute, "attribute '~' after function definitions"},
             {missing_qlc_hrl, "qlc:q/~ called, but \"qlc.hrl\" not included"},
             {redefine_import, "function ~/~ already imported from ~"},
             {bad_inline, "inlined function ~/~ undefined"},
             {invalid_deprecated, "badly formed deprecated attribute ~"},
             {bad_deprecated, "deprecated function ~/~ undefined or not exported"},
             {bad_nowarn_unused_function, "function ~/~ undefined"},
             {bad_nowarn_bif_clash, "function ~/~ undefined"},
             {disallowed_nowarn_bif_clash, "compile directive nowarn_bif_clash is no longer allowed, - use explicit module names or -compile({no_auto_import, [F/A]})"},
             {bad_nowarn_deprecated_function, "~:~/~ is not a deprecated function"},
             {bad_on_load, "badly formed on_load attribute: ~"},
             {multiple_on_loads, "more than one on_load attribute"},
             {bad_on_load_arity, "function ~/~ has wrong arity (must be 0)"},
             {undefined_on_load, "function ~/~ undefined"},

             {export_all, "export_all flag enabled - all functions will be exported"},
             {duplicated_export, "function ~/~ already exported"},
             {unused_import, "import ~:~/~ is unused"},
             {undefined_function, "function ~/~ undefined"},
             {redefine_function, "function ~/~ already defined"},
             {define_import, "defining imported function ~/~"},
             {unused_function, "function ~/~ is unused"},
             {call_to_redefined_bif, "ambiguous call of overridden auto-imported BIF ~/~\n - use erlang:~/~ or \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},
             {call_to_redefined_old_bif, "ambiguous call of overridden pre R14 auto-imported BIF ~/~\n - use erlang:~/~ or \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},
             {redefine_old_bif_import, "import directive overrides pre R14 auto-imported BIF ~/~\n - use \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},
             {redefine_bif_import, "import directive overrides auto-imported BIF ~/~\n - use \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},

             {deprecated, "~ is deprecated and will be removed in ~ use ~"},
             {deprecated, "~:~/~: ~"},
             {removed, "call to ~ will fail, since it was removed in ~ use ~"},
             {removed, "~: ~"},
             {obsolete_guard, "~/~ obsolete"},
             {too_many_arguments, "too many arguments (~) - maximum allowed is 255"},


             {illegal_pattern, "illegal pattern"},
             {illegal_map_key_variable, "illegal use of variable ~ in map"},
             {illegal_bin_pattern, "binary patterns cannot be matched in parallel using '='"},
             {illegal_expr, "illegal expression"},
             {illegal_guard_local_call, "call to local/imported function ~/~ is illegal in guard"},
             {illegal_guard_expr, "illegal guard expression"},

             {illegal_map_construction, "only association operators '=>' are allowed in map construction"},

             {undefined_record, "record ~ undefined"},
             {redefine_record, "record ~ already defined"},
             {redefine_field, "field ~ already defined in record ~"},
             {undefined_field, "field ~ undefined in record ~"},
             {illegal_record_info, "illegal record info"},
             {field_name_is_variable, "field ~ is not an atom or _ in record ~"},
             {wildcard_in_update, "meaningless use of _ in update of record ~"},
             {unused_record, "record ~ is unused"},
             {untyped_record, "record ~ has field(s) without type information"},

             {unbound_var, "variable ~ is unbound"},
             {unsafe_var, "variable ~ unsafe in ~ ~"},
             {exported_var, "variable ~ exported from ~ ~"},
             {shadowed_var, "variable ~ shadowed in ~"},
             {unused_var, "variable ~ is unused"},
             {variable_in_record_def, "variable ~ in record definition"},

             {undefined_bittype, "bit type ~ undefined"},
             {bittype_unit, "a bit unit size must not be specified unless a size is specified too"},
             {illegal_bitsize, "illegal bit size"},
             {unsized_binary_not_at_end, "a binary field without size is only allowed at the end of a binary pattern"},
             {typed_literal_string, "a literal string in a binary pattern must not have a type or a size"},
             {utf_bittype_size_or_unit, "neither size nor unit must be given for segments of type utf8/utf16/utf32"},
             {bad_bitsize, "bad ~ bit size"},
             {unsized_binary_in_bin_gen_pattern, "binary fields without size are not allowed in patterns of bit string generators"},

             {conflicting_behaviours, "conflicting behaviours - callback ~/~ required by both '~' and '~' ~"},
             {undefined_behaviour_func, "undefined callback function ~/~ (behaviour '~')"},
             {undefined_behaviour, "behaviour ~ undefined"},
             {undefined_behaviour_callbacks, "behaviour ~ callback functions are undefined"},
             {ill_defined_behaviour_callbacks, "behaviour ~ callback functions erroneously defined"},
             {behaviour_info, "cannot define callback attibute for ~/~ when behaviour_info is defined"},

             {singleton_typevar, "type variable ~ is only used once (is unbound)"},
             {bad_export_type, "bad export_type declaration"},
             {duplicated_export_type, "type ~/~ already exported"},
             {undefined_type, "type ~(~) undefined"},
             {unused_type, "type ~(~) is unused"},
             {new_builtin_type, "type ~(~) is a new builtin type its (re)definition is allowed only until the next release"},
             {builtin_type, "type ~(~) is a builtin type it cannot be redefined"},
             {renamed_type, "type ~() is now called ~() please use the new name instead"},
             {redefine_type, "type ~(~) already defined"},
             {type_syntax, "bad ~ type"},
             {redefine_spec, "spec for ~:~/~ already defined"},
             {redefine_callback, "callback ~:~/~ already defined"},
             {spec_fun_undefined, "spec for undefined function ~:~/~"},
             {missing_spec, "missing specification for function ~/~"},
             {spec_wrong_arity, "spec has the wrong arity"},
             {callback_wrong_arity, "callback has the wrong arity"},
             {deprecated_builtin_type, "type ~/~ is deprecated and will be removed in ~ use ~:~/~"},
             {deprecated_builtin_type, "type ~/~ is deprecated and will be removed in ~ use ~:~/~ or preferably ~:~/~"},
             {not_exported_opaque, "opaque type ~(~) is not exported"},
             {underspecified_opaque, "opaque type ~(~) is underspecified and therefore meaningless"}
            ]
 }
]

